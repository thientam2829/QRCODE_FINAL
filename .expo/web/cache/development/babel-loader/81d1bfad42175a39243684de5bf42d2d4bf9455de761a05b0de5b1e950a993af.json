{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport { initializeApp } from \"firebase/app\";\nimport { getFirestore, collection, doc, addDoc, getDoc, updateDoc } from \"firebase/firestore\";\nimport { query, where, getDocs } from \"firebase/firestore\";\nimport { getAuth } from \"firebase/auth\";\nimport \"firebase/firestore\";\nvar firebaseConfig = {\n  apiKey: \"AIzaSyB5kN9BmoXnJLBozGf_gyw5EAtnE0KT3kQ\",\n  authDomain: \"qrcode-c6f21.firebaseapp.com\",\n  databaseURL: \"https://qrcode-c6f21-default-rtdb.asia-southeast1.firebasedatabase.app\",\n  projectId: \"qrcode-c6f21\",\n  storageBucket: \"qrcode-c6f21.appspot.com\",\n  messagingSenderId: \"369629935562\",\n  appId: \"1:369629935562:web:8a71c3790db58493f90133\"\n};\nvar app = initializeApp(firebaseConfig);\nvar db = getFirestore(app);\nvar auth = getAuth(app);\nvar database = getFirestore(app);\nvar getNameFromFirestore = function () {\n  var _ref = _asyncToGenerator(function* (email) {\n    var db = getFirestore();\n    var usersCollection = collection(db, \"USER\");\n    var q = query(usersCollection, where(\"email\", \"==\", email));\n    var querySnapshot = yield getDocs(q);\n    if (querySnapshot.size > 0) {\n      var user = querySnapshot.docs[0].data();\n      return user.name;\n    } else {\n      console.error(\"User not found in the database.\");\n      return null;\n    }\n  });\n  return function getNameFromFirestore(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\nexport { getNameFromFirestore };\nexport { addDoc, db, collection, auth };\nexport { database };","map":{"version":3,"names":["initializeApp","getFirestore","collection","doc","addDoc","getDoc","updateDoc","query","where","getDocs","getAuth","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","app","db","auth","database","getNameFromFirestore","_ref","_asyncToGenerator","email","usersCollection","q","querySnapshot","size","user","docs","data","name","console","error","_x","apply","arguments"],"sources":["C:/Users/Nguyen Thien Tam/OneDrive/Desktop/MOBILEAPP/QR/firebaseConfig.js"],"sourcesContent":["import { initializeApp } from \"firebase/app\";\r\nimport { getFirestore, collection,doc, addDoc, getDoc,updateDoc } from \"firebase/firestore\";\r\nimport {  query, where, getDocs } from \"firebase/firestore\";\r\nimport { getAuth } from \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyB5kN9BmoXnJLBozGf_gyw5EAtnE0KT3kQ\",\r\n  authDomain: \"qrcode-c6f21.firebaseapp.com\",\r\n  databaseURL:\r\n    \"https://qrcode-c6f21-default-rtdb.asia-southeast1.firebasedatabase.app\",\r\n  projectId: \"qrcode-c6f21\",\r\n  storageBucket: \"qrcode-c6f21.appspot.com\",\r\n  messagingSenderId: \"369629935562\",\r\n  appId: \"1:369629935562:web:8a71c3790db58493f90133\",\r\n};\r\n\r\nconst app = initializeApp(firebaseConfig);\r\nconst db = getFirestore(app);\r\nconst auth = getAuth(app);\r\nconst database = getFirestore(app);\r\nconst getNameFromFirestore = async (email) => {\r\n  const db = getFirestore();\r\n  const usersCollection = collection(db, \"USER\"); // Replace \"USER\" with the correct collection name\r\n  const q = query(usersCollection, where(\"email\", \"==\", email));\r\n  const querySnapshot = await getDocs(q);\r\n\r\n  if (querySnapshot.size > 0) {\r\n    // Assuming email is unique, so we expect only one document\r\n    const user = querySnapshot.docs[0].data();\r\n    return user.name;\r\n  } else {\r\n    console.error(\"User not found in the database.\");\r\n    return null;\r\n  }\r\n};\r\n\r\nexport { getNameFromFirestore };\r\nexport { addDoc, db, collection, auth };\r\nexport { database };"],"mappings":";AAAA,SAASA,aAAa,QAAQ,cAAc;AAC5C,SAASC,YAAY,EAAEC,UAAU,EAACC,GAAG,EAAEC,MAAM,EAAEC,MAAM,EAACC,SAAS,QAAQ,oBAAoB;AAC3F,SAAUC,KAAK,EAAEC,KAAK,EAAEC,OAAO,QAAQ,oBAAoB;AAC3D,SAASC,OAAO,QAAQ,eAAe;AACvC,OAAO,oBAAoB;AAC3B,IAAMC,cAAc,GAAG;EACrBC,MAAM,EAAE,yCAAyC;EACjDC,UAAU,EAAE,8BAA8B;EAC1CC,WAAW,EACT,wEAAwE;EAC1EC,SAAS,EAAE,cAAc;EACzBC,aAAa,EAAE,0BAA0B;EACzCC,iBAAiB,EAAE,cAAc;EACjCC,KAAK,EAAE;AACT,CAAC;AAED,IAAMC,GAAG,GAAGnB,aAAa,CAACW,cAAc,CAAC;AACzC,IAAMS,EAAE,GAAGnB,YAAY,CAACkB,GAAG,CAAC;AAC5B,IAAME,IAAI,GAAGX,OAAO,CAACS,GAAG,CAAC;AACzB,IAAMG,QAAQ,GAAGrB,YAAY,CAACkB,GAAG,CAAC;AAClC,IAAMI,oBAAoB;EAAA,IAAAC,IAAA,GAAAC,iBAAA,CAAG,WAAOC,KAAK,EAAK;IAC5C,IAAMN,EAAE,GAAGnB,YAAY,CAAC,CAAC;IACzB,IAAM0B,eAAe,GAAGzB,UAAU,CAACkB,EAAE,EAAE,MAAM,CAAC;IAC9C,IAAMQ,CAAC,GAAGrB,KAAK,CAACoB,eAAe,EAAEnB,KAAK,CAAC,OAAO,EAAE,IAAI,EAAEkB,KAAK,CAAC,CAAC;IAC7D,IAAMG,aAAa,SAASpB,OAAO,CAACmB,CAAC,CAAC;IAEtC,IAAIC,aAAa,CAACC,IAAI,GAAG,CAAC,EAAE;MAE1B,IAAMC,IAAI,GAAGF,aAAa,CAACG,IAAI,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,CAAC;MACzC,OAAOF,IAAI,CAACG,IAAI;IAClB,CAAC,MAAM;MACLC,OAAO,CAACC,KAAK,CAAC,iCAAiC,CAAC;MAChD,OAAO,IAAI;IACb;EACF,CAAC;EAAA,gBAdKb,oBAAoBA,CAAAc,EAAA;IAAA,OAAAb,IAAA,CAAAc,KAAA,OAAAC,SAAA;EAAA;AAAA,GAczB;AAED,SAAShB,oBAAoB;AAC7B,SAASnB,MAAM,EAAEgB,EAAE,EAAElB,UAAU,EAAEmB,IAAI;AACrC,SAASC,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}