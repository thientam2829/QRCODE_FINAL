{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar RandomQuoteComponent = function RandomQuoteComponent() {\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    randomQuote = _useState2[0],\n    setRandomQuote = _useState2[1];\n  var _useState3 = useState(null),\n    _useState4 = _slicedToArray(_useState3, 2),\n    error = _useState4[0],\n    setError = _useState4[1];\n  useEffect(function () {\n    fetch('https://api.quotable.io/random').then(function (response) {\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      return response.json();\n    }).then(function (data) {\n      return setRandomQuote(data.content);\n    }).catch(function (error) {\n      return setError(error.message);\n    });\n  }, []);\n  return _jsx(View, {\n    style: styles.quoteContainer,\n    children: error ? _jsxs(Text, {\n      style: styles.errorText,\n      children: [\"Error: \", error]\n    }) : _jsx(Text, {\n      style: styles.quoteText,\n      children: randomQuote\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  quoteContainer: {\n    padding: 20,\n    backgroundColor: '#f0f0f0',\n    borderRadius: 10,\n    margin: 10\n  },\n  quoteText: {\n    fontSize: 16,\n    fontStyle: 'italic'\n  },\n  errorText: {\n    fontSize: 16,\n    color: 'red'\n  }\n});\nexport default RandomQuoteComponent;","map":{"version":3,"names":["React","useState","useEffect","View","Text","StyleSheet","jsxs","_jsxs","jsx","_jsx","RandomQuoteComponent","_useState","_useState2","_slicedToArray","randomQuote","setRandomQuote","_useState3","_useState4","error","setError","fetch","then","response","ok","Error","json","data","content","catch","message","style","styles","quoteContainer","children","errorText","quoteText","create","padding","backgroundColor","borderRadius","margin","fontSize","fontStyle","color"],"sources":["C:/Users/Nguyen Thien Tam/OneDrive/Desktop/MOBILEAPP/QR/components/RandomQuotes.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { View, Text, StyleSheet } from 'react-native';\r\n\r\nconst RandomQuoteComponent = () => {\r\n  const [randomQuote, setRandomQuote] = useState('');\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    fetch('https://api.quotable.io/random')\r\n      .then(response => {\r\n        if (!response.ok) {\r\n          throw new Error('Network response was not ok');\r\n        }\r\n        return response.json();\r\n      })\r\n      .then(data => setRandomQuote(data.content))\r\n      .catch(error => setError(error.message));\r\n  }, []);\r\n\r\n  return (\r\n    <View style={styles.quoteContainer}>\r\n      {error ? (\r\n        <Text style={styles.errorText}>Error: {error}</Text>\r\n      ) : (\r\n        <Text style={styles.quoteText}>{randomQuote}</Text>\r\n      )}\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  quoteContainer: {\r\n    padding: 20,\r\n    backgroundColor: '#f0f0f0',\r\n    borderRadius: 10,\r\n    margin: 10,\r\n  },\r\n  quoteText: {\r\n    fontSize: 16,\r\n    fontStyle: 'italic',\r\n  },\r\n  errorText: {\r\n    fontSize: 16,\r\n    color: 'red',\r\n  },\r\n});\r\n\r\nexport default RandomQuoteComponent;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,UAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAAA,SAAAC,GAAA,IAAAC,IAAA;AAGnD,IAAMC,oBAAoB,GAAG,SAAvBA,oBAAoBA,CAAA,EAAS;EACjC,IAAAC,SAAA,GAAsCV,QAAQ,CAAC,EAAE,CAAC;IAAAW,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA3CG,WAAW,GAAAF,UAAA;IAAEG,cAAc,GAAAH,UAAA;EAClC,IAAAI,UAAA,GAA0Bf,QAAQ,CAAC,IAAI,CAAC;IAAAgB,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAAjCE,KAAK,GAAAD,UAAA;IAAEE,QAAQ,GAAAF,UAAA;EAEtBf,SAAS,CAAC,YAAM;IACdkB,KAAK,CAAC,gCAAgC,CAAC,CACpCC,IAAI,CAAC,UAAAC,QAAQ,EAAI;MAChB,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;MAChD;MACA,OAAOF,QAAQ,CAACG,IAAI,CAAC,CAAC;IACxB,CAAC,CAAC,CACDJ,IAAI,CAAC,UAAAK,IAAI;MAAA,OAAIX,cAAc,CAACW,IAAI,CAACC,OAAO,CAAC;IAAA,EAAC,CAC1CC,KAAK,CAAC,UAAAV,KAAK;MAAA,OAAIC,QAAQ,CAACD,KAAK,CAACW,OAAO,CAAC;IAAA,EAAC;EAC5C,CAAC,EAAE,EAAE,CAAC;EAEN,OACEpB,IAAA,CAACN,IAAI;IAAC2B,KAAK,EAAEC,MAAM,CAACC,cAAe;IAAAC,QAAA,EAChCf,KAAK,GACJX,KAAA,CAACH,IAAI;MAAC0B,KAAK,EAAEC,MAAM,CAACG,SAAU;MAAAD,QAAA,GAAC,SAAO,EAACf,KAAK;IAAA,CAAO,CAAC,GAEpDT,IAAA,CAACL,IAAI;MAAC0B,KAAK,EAAEC,MAAM,CAACI,SAAU;MAAAF,QAAA,EAAEnB;IAAW,CAAO;EACnD,CACG,CAAC;AAEX,CAAC;AAED,IAAMiB,MAAM,GAAG1B,UAAU,CAAC+B,MAAM,CAAC;EAC/BJ,cAAc,EAAE;IACdK,OAAO,EAAE,EAAE;IACXC,eAAe,EAAE,SAAS;IAC1BC,YAAY,EAAE,EAAE;IAChBC,MAAM,EAAE;EACV,CAAC;EACDL,SAAS,EAAE;IACTM,QAAQ,EAAE,EAAE;IACZC,SAAS,EAAE;EACb,CAAC;EACDR,SAAS,EAAE;IACTO,QAAQ,EAAE,EAAE;IACZE,KAAK,EAAE;EACT;AACF,CAAC,CAAC;AAEF,eAAejC,oBAAoB"},"metadata":{},"sourceType":"module","externalDependencies":[]}